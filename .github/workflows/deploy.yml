name: Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/url-shortener-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/url-shortener-frontend:latest

      - name: Set up Kubeconfig
        # This step is a placeholder. You will need to configure this for your specific Kubernetes provider.
        # For example, for GKE, you would use actions/google-github-actions/get-gke-credentials
        # For AKS, you would use azure/aks-set-context
        # For EKS, you would use aws-actions/configure-aws-credentials and aws-actions/amazon-eks-cluster
        # You can also use a generic kubeconfig file stored as a secret.
        run: |
          echo "apiVersion: v1
          clusters:
          - cluster:
              server: ${{ secrets.KUBE_SERVER }}
              certificate-authority-data: ${{ secrets.KUBE_CERT_DATA }}
            name: k8s
          contexts:
          - context:
              cluster: k8s
              user: user
            name: k8s
          current-context: k8s
          kind: Config
          preferences: {}
          users:
          - name: user
            user:
              token: ${{ secrets.KUBE_TOKEN }}
          " > ~/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/
